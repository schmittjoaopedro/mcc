package teste;

public class Teste {

	private StringBuffer memoryLeak;
	StringBuffer sb1 = new StringBuffer('c');

	private void bar() {
		buz("Howdy");
	    buz("Howdy");
	    buz("Howdy");
	    buz("Howdy");
	}
	private void buz(String x) {}
	
	private String baz() {
		String bar = "howdy";
		return bar.toString();
	}
	
	void barIn() {
		StringBuffer sb=new StringBuffer("tmp = "+System.getProperty("java.io.tmpdir"));
		sb = new StringBuffer("tmp = ");
		sb.append(System.getProperty("java.io.tmpdir"));
	}
	
	public boolean bar(String buz) {
    	// should be buz.equalsIgnoreCase("baz")
    	return buz.toUpperCase().equals("baz");
  	}
  	
  	void bas() {
		StringBuffer sb = new StringBuffer();
		if(sb.toString().equals("")) {}
		if(sb.length() == 0) {}
 	}
	
	void bat() {
		StringBuffer sb=new StringBuffer();
		sb.append("a");
		sb=new StringBuffer();
		sb.append('a');
	}
	
	private void bak() {
		StringBuffer buf = new StringBuffer();
		buf.append("Hello").append(" ").append("World"); //bad
		buf.append("Hello World");//good
	}
 
 	void bara() {
        StringBuffer bad = new StringBuffer();
        bad.append("This is a long string, will exceed the default 16 characters");//bad
        StringBuffer good = new StringBuffer(41);
        good.append("This is a long string, which is pre-sized");//good
    }
    
    public String convert(int i) {
		String s;
		s = "a" + String.valueOf(i); // Bad
		s = "a" + i; // Better
		return s;
	}
	
	boolean test(String s) {
		if (s == "one") return true; //Bad
		if ("two".equals(s)) return true; //Better
		return false;
	}
 
}
